// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique

  username     String
  name         String?
  email        String?
  Model        Model[]
  auth_session Session[]
  key          Key[]

  createdAt DateTime @default(now()) @map(name: "created_at")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Model {
  id          Int      @id @unique @default(autoincrement())
  title       String //@db.VarChar(255)
  slug        Slug?
  media       Media?
  description String
  // type        Type   @default(notice)
  type        String
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")

  @@unique([user_id])
}

model Slug {
  id        Int      @id @unique @default(autoincrement())
  url       String //@db.VarChar(255)
  type      String
  model_id  Int      @unique
  Model     Model    @relation(fields: [model_id], references: [id])
  // type        Type   @default(notice)
  createdAt DateTime @default(now()) @map(name: "created_at")

  @@unique([url])
}

model Media {
  id        Int      @id @unique @default(autoincrement())
  title     String //@db.VarChar(255)
  url       String //@db.VarChar(255)
  type      String
  model_id  Int      @unique
  Model     Model    @relation(fields: [model_id], references: [id])
  // type        Type   @default(notice)
  createdAt DateTime @default(now()) @map(name: "created_at")

  @@unique([url])
}

// enum Type {
//   notice
//   out_of_stock
//   pre_order
// }
